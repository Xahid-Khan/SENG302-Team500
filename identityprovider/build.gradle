plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'nz.ac.canterbury.seng302'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-web'

    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.0'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.0'

    implementation 'net.devh:grpc-spring-boot-starter:2.13.1.RELEASE' // GRPC server / client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0' // Local package containing .proto files

    // Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.4'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
    implementation 'com.h2database:h2:2.1.210'
    // allows the server to also run on a non-grpc port default 8080
    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.cucumber:cucumber-java:7.2.3'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
        }
    }

sourceSets {
    test {
        resources.srcDirs = ['src/test/resources']
        java.srcDirs = ['src/test/java', 'src/main/java']
        runtimeClasspath = project.sourceSets.main.compileClasspath +
                project.sourceSets.test.compileClasspath +
                fileTree("src/test/resources/test") +
                project.sourceSets.test.output + project.sourceSets.main.output
        }
    }

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy cucumber
}

targetCompatibility = JavaVersion.VERSION_17

